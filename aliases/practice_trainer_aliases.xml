<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Practice Trainer</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Show Practice Trainer</name>
				<script>practice_trainer.container:show()
practice_trainer.container:raiseAll()</script>
				<command></command>
				<packageName></packageName>
				<regex>^ptrainer$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Practice Warrior</name>
				<script>if practice_trainer:pracs_to_level() &gt; 51 then
  practice_trainer:echo(
    "More than 51 levels required. Cannot practice this practice setup.\n", false, true
  )
else
  for _, item in pairs(practice_trainer.pracs.queue) do
    if practice_trainer:get_skill_class(item) == "warrior" then
      send(f"practice {item}")
    end
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^prac warrior$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Practice Rogue</name>
				<script>if practice_trainer:pracs_to_level() &gt; 51 then
  practice_trainer:echo(
    "More than 51 levels required. Cannot practice this practice setup.\n", false, true
  )
else
  for _, item in pairs(practice_trainer.pracs.queue) do
    if practice_trainer:get_skill_class(item) == "rogue" then
      send(f"practice {item}")
    end
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^prac rogue$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Practice Hunter</name>
				<script>if practice_trainer:pracs_to_level() &gt; 51 then
  practice_trainer:echo(
    "More than 51 levels required. Cannot practice this practice setup.\n", false, true
  )
else
  for _, item in pairs(practice_trainer.pracs.queue) do
    if practice_trainer:get_skill_class(item) == "hunter" then
      send(f"practice {item}")
    end
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^prac hunter$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Practice Fade</name>
				<script>if practice_trainer:pracs_to_level() &gt; 51 then
  practice_trainer:echo(
    "More than 51 levels required. Cannot practice this practice setup.\n", false, true
  )
else
  for _, item in pairs(practice_trainer.pracs.queue) do
    if practice_trainer:get_skill_class(item) == "fade" then
      send(f"practice {item}")
    end
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^prac fade$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Practice Circle</name>
				<script>send("stand")
enableTrigger("practice_trainer_hunter")
send("hunter practice please")</script>
				<command></command>
				<packageName></packageName>
				<regex>^prac circle$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Practice Shaidar</name>
				<script>if practice_trainer:pracs_to_level() &gt; 51 then
  practice_trainer:echo(
    "More than 51 levels required. Cannot practice this practice setup.\n", false, true
  )
else
  for _, item in pairs(practice_trainer.pracs.queue) do
    send(f"practice {item}")
  end
end
</script>
				<command></command>
				<packageName></packageName>
				<regex>^prac shaidar$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Show saved setups</name>
				<script>practice_trainer:echo("Showing saved practice setups\n")
for fname in lfs.dir(f"{getMudletHomeDir()}/practice_trainer") do 
  if fname:sub(-4,-1) == ".lua" then
    cecho(fname:sub(1,-5).."\n")
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^ptrainer setups$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Show help</name>
				<script>practice_trainer:show_help()</script>
				<command></command>
				<packageName></packageName>
				<regex>^ptrainer help$</regex>
			</Alias>
		</AliasGroup>
	</AliasPackage>
</MudletPackage>
