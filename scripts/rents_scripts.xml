<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Rents</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>rents initializations</name>
				<packageName></packageName>
				<script>db:create(
  "rents",
  {
    storage =
      {
        name = "",
        room = 0,
        zone = "",
        item = "",
        cost = "",
        timestamp = db:Timestamp("CURRENT_TIMESTAMP"),
      },
  }
)

rents = rents or {clear_room = true}

rents.help =
  [[
    &lt;cyan&gt;Rent Script&lt;reset&gt;

    This script will track items that you have stored in your rents in a database located
    at ]] .. getMudletHomeDir() .. [[/Database_rents.db
    
    Below is a brief overview of some commands that this script includes.
    All commands can be found in the appropriate rents folder under mudlet aliases.

    &lt;cyan&gt;Commands:&lt;reset&gt;
        &lt;yellow&gt;rents show&lt;reset&gt; - Show all items in the rent database
        &lt;yellow&gt;rents show name character&lt;reset&gt; - Shows all items in the rent database
            associated with a particular character name. Not case sensitive. 
            Examples: rents show name Adael, rents show name bludlust
        &lt;yellow&gt;rents show item keyword(s)&lt;reset&gt; - Shows all items in the rent database that
            contain the given keyword(s). Not case sensitive, but if multiple keywords are
            used the order (and, if applicable, punctuation) matters.
            Examples: rents show item heron-engraved, rents show item a crystal lightstick
        &lt;yellow&gt;rents show item rare&lt;reset&gt; - Shows all rare items in the rent database
        &lt;yellow&gt;rents show item angreal&lt;reset&gt; - Shows all angreal in the rent database
        &lt;yellow&gt;rents show zone keyword(s)&lt;reset&gt; - Shows all items in the rent database whose
            zone name (in my map data) contains the provided keyword(s). Not case sensitive, 
            but if multiple keywords are used the order (and, if applicable, punctuation) matters.
            Examples: rents show zone Caemlyn, rents show zone bandar eban,
                rents show zone thakan'dar
                
        &lt;yellow&gt;rents delete&lt;reset&gt; - Delete the ENTIRE rent database. &lt;red&gt;Use with caution!&lt;reset&gt;
        &lt;yellow&gt;rents delete name character&lt;reset&gt; - Deletes all entries in the rent database
            for the provided character name. Not case sensitive.
            Examples: rents delete name Adael, rents delete name bludlust
        &lt;yellow&gt;rents delete room (roomID)&lt;reset&gt; - Deletes all entries in the rent database for the player's
            current room, or the provided roomID number if one is given. 
            Examples: rents delete room, rents delete room 139 
        
]]</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>rents:echo</name>
				<packageName></packageName>
				<script>function rents:echo(what, debug, err)
  --colored tags for message echo
  local main_tag = "&lt;lawn_green&gt;(&lt;green&gt;rents&lt;lawn_green&gt;): &lt;white&gt;"
  local debug_tag = "&lt;deep_sky_blue&gt;(&lt;royal_blue&gt;debug&lt;deep_sky_blue&gt;): &lt;white&gt;"
  local err_tag = "&lt;coral&gt;(&lt;red&gt;error&lt;coral&gt;): &lt;white&gt;"
  
  --if debug message and config debug is false, return without echoing
  if debug and not self.configs.dbug then return end
  
  --if start of message is new line, print that before colored tags of message echo
  if what:sub(0,1)=="\n" then
    cecho("\n")
    what = what:sub(2)
  end
  cecho(main_tag)
  if debug then cecho(debug_tag) end
  if err then cecho(err_tag) end
  cecho(what)
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>rents:sys_disconnection</name>
				<packageName></packageName>
				<script>function rents:sys_disconnection(event)
  rents.name = nil
  rents.clear_room = true
end

registerAnonymousEventHandler("sysExitEvent", "rents:sys_disconnection")
registerAnonymousEventHandler("sysDisconnectionEvent", "rents:sys_disconnection")</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>rents rare items</name>
				<packageName></packageName>
				<script>rents.rares = {
    "a heron-marked longsword",
    "a heron-marked blade",
    "a heron-marked greatsword", 
    "a heron-marked foil",
    "a heron-engraved scabbard",
    "a belt bearing a dragon worked in silver",
    "a black shirt trimmed with lace",
    "an ornate chainmail shirt chased with gold",
    "a sinister black trident",
    "a massive war maul",
    "a tainted war maul",
    "a triple bladed dagger",
    "a steel warhammer",
    "a surcoat with exquisite embroidery",
    "a gown of exquisite design",
    "a silver medallion",
    "a shocklance",
    "a razor-sharp longsword",
    "a partisan bearing the arms of Ghealdan",
    "a pair of long-handled war axes",
    "a pair of gold-hilted hooked swords",
    "a nimble blade with a cuendillar pommel",
    "a feathered Kandori paramerion",
    "a diamond-tipped lance",
    "a darkened steel trident",
    "a crimson-hafted battleaxe",
    "a polished onyx-inlaid shield",
    "a jeweled wristcuff",
    "an obsidian encrusted sungwood staff",
    "a wicked knife bladed axe",
}    </script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>rents angreal</name>
				<packageName></packageName>
				<script>rents.angreal =
  {
    "a disc of moonstone",
    "a greenish, translucent sphere",
    "a jade carving of an old man",
    "a many-faceted stone",
    "a necklace of fire sapphire",
    "a sculpted statuette",
    "a short, thick rod",
    "a small crystalline circlet",
    "a small crystalline globe",
    "a small stone dagger",
    "a wood carving of a bear",
    "an ivory figurine",
    "an orb filled with incandescent light",
    "a carved ivory pyramid",
    "Callandor",
    "a bracelet of twisted silver",
  }</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>rents:display_items</name>
				<packageName></packageName>
				<script>function rents:display_items(storage)
  cecho(string.format("%-10s&lt;ansi_cyan&gt;%-40s&lt;reset&gt;%s&lt;green&gt;%-40s&lt;gold&gt;%-10s\n", "Name", "Room", "", "Item", "Cost"))
  
  for _, item in pairs(storage) do
    local crowns = item.cost:match("(%d+) gold crowns")
    local coppers = item.cost:match("(%d+) coppers")
    if crowns then crowns = crowns.."g" else crowns = "0g" end
    if coppers then coppers = coppers.."c" else coppers = "0c" end
    local cost = crowns.." "..coppers
    
    local room_name = ""
    
    if item.room == 0 then
      room_name = "bank"
    else
      room_name = getRoomName(item.room)
    end
    
    local msg_format = "%-10s%-40s%s%-40s%-10s\n"
    
    if string.len(room_name) &gt;= 40 or string.len(item.item) &gt;= 40 then
      msg_format = "%-10s%-40s\n%10s%-80s%-10s\n"
    end
  
    local msg = string.format(msg_format, 
      item.name,
      room_name,
      "", 
      item.item,
      cost
      )
    cechoLink(msg, function() centerview(item.room) end, "Click to center map on room.", true)
  end
end</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
	</ScriptPackage>
</MudletPackage>
